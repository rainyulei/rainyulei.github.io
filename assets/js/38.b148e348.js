(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{294:function(s,e,a){"use strict";a.r(e);var n=a(0),t=Object(n.a)({},function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"更新服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新服务器","aria-hidden":"true"}},[s._v("#")]),s._v(" 更新服务器")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("yum update\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"安装-nvm-安装-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-nvm-安装-node","aria-hidden":"true"}},[s._v("#")]),s._v(" 安装 nvm---安装 node")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum groupinstall 'Development Tools' #安装构建工具\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash\n# 安装nvm 完成后关闭打开一次命令行窗口\n#输入\nnvm --version   #有反应就可以了\nnvm ls-remote  #列出可安装版本\nnvm install v8.15.1 # 安装具体版本\nnvm list # 列出已经安装的版本 和默认版本\nnvm use 版本号 # 切换版本\n#--注意  切换版本号之后  node-modules  不会共享  也就是全局安装的软件会消失\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"安装-mongoose-数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-mongoose-数据库","aria-hidden":"true"}},[s._v("#")]),s._v(" 安装 mongoose 数据库")]),s._v(" "),a("p",[s._v("1、添加 MongoDB 的源：")]),s._v(" "),a("p",[a("code",[s._v("mongodb-org")]),s._v(" 这个包默认不存在 CentOS 的源里，所以要先添加到我们服务器中：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo vi /etc/yum.repos.d/mongodb-org.repo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后访问 "),a("a",{attrs:{href:"http://link.zhihu.com/?target=https%3A//docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/%23configure-the-package-management-system-yum",target:"_blank",rel:"noopener noreferrer"}},[s._v("Install on Red Hat"),a("OutboundLink")],1),s._v(" 找到最新的 MongoDB 稳定版本并添加到上面打开的文档中，类似这样：这个是 4.0 的")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[mongodb-org-4.0]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("编辑并保存文件，查看服务器源列表中是否已添加成功（留意 mongodb-org-4.0....）：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ yum repolist\n\n# 输出一般如下\n. . .\nrepo id                          repo name\nbase/7/x86_64                    CentOS-7 - Base\nextras/7/x86_64                  CentOS-7 - Extras\nmongodb-org-3.2/7/x86_64         MongoDB Repository\nupdates/7/x86_64                 CentOS-7 - Updates\n. . .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("2、安装 MongoDB：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo yum install mongodb-org\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("3、启动 MongoDB：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo systemctl start mongod\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如有需要重新解析改动后的 /etc/mongod.conf 配置文件，可以执行：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo systemctl reload mongod\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("4、因为 systemctl 并不返回启动结果，所以可以通过以下命令查看是否启动：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo tail /var/log/mongodb/mongod.log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查找是否包含该日志，若出现则表示服务已启动，可以通过 "),a("code",[s._v("mongo")]),s._v(" 来开启命令：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(". . .\n[initandlisten] waiting for connections on port 27017\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("5、开机自启动")]),s._v(" "),a("p",[s._v("首先查看是否已启用：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ systemctl is-enabled mongod; echo $?\n\n\n# 查看输出是否包含 enabled 字样\n. . .\nenabled\n0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("若无，可以手动启动：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo systemctl enable mongod\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("6、导入 example 数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mongorestore -h 127.0.0.1:27017 -d 创建的数据库名称 --drop #centos上要引入的数据的目录\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("7 创建管理员 和操作员")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('mongo ...\n...\nuse admin\n# 创建管理员\ndb.createUser({user: "admin",pwd: "admin",roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]})\n退出  然后使用管理员账号重新登录 创建操作员\n# 创建数据操作员\ndb.createUser({user: "user",pwd: "pwd",roles: [ { role: "readWrite", db: "doracms2" } ]})\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("这里要注意 mongo 创建 管理员和用户的方式与其他数据库不一样，最好去读一遍原文档，具体差别就是，mongo 创建只有一个用户，还要为这个用户添加权限。\n在使用这个用户登录的时候，各个版本驱动登录使用方式都有细微的差别，比如在 3.x 的某些情况下，在 mongoose 使用用户名密码操作数据库的时候，是要加上 '/authSource=' + 数据库名 + '&w=1' ，\n然后选项也有所区别，这里要注意。")]),s._v(" "),a("p",[s._v("8 修改配置文件 mongdb.conf")]),s._v(" "),a("p",[s._v("添加在")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("security"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n   auth："),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果是在 3.x 版本以上添加")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("security"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" authorization"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'enabled'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",[a("li",[s._v("移除 MongoDB 包")])]),s._v(" "),a("p",[s._v("移除之前安装的所有 MongoDB 包")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo yum erase $(rpm -qa | grep mongodb-org)1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("删除数据文件及日志文件")]),s._v(" "),a("p",[s._v("删除 MongoDB 数据库和日志文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ sudo rm -r /var/log/mongodb\n$ sudo rm -r /var/lib/mongo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"安装-redis-数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-redis-数据库","aria-hidden":"true"}},[s._v("#")]),s._v(" 安装 redis 数据库")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum -y install redis\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("redis 配置文件，路径为/etc/redis.conf")]),s._v(" "),a("p",[s._v("给 Redis 设置密码，取消注释这一行：#requirepass foobared ，foobared 即当前密码，可以自行修改为")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("requirepass 密码\ndaemonize yes 设置位后台启动\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("然后重启 Redis 服务，使用的命令如下：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sudo systemctl restart redis\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("redis 常用命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("systemctl start redis.service #启动redis服务器\n\nsystemctl stop redis.service #停止redis服务器\n\nsystemctl restart redis.service #重新启动redis服务器\n\nsystemctl status redis.service #获取redis服务器的运行状态\n\nsystemctl enable redis.service #开机启动redis服务器\n\nsystemctl disable redis.service #开机禁用redis服务器\nrm -rf /usr/local/bin/redis* # 卸载redis\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"安装-pm2-进程管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-pm2-进程管理","aria-hidden":"true"}},[s._v("#")]),s._v(" 安装 PM2 进程管理")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm install pm2 -g # 一定要安装到全局\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("PM2 工具十分强大 ，几乎是前端工程师接私活必不可少的。专门写一篇笔记纪录。")]),s._v(" "),a("h2",{attrs:{id:"其他要用到的指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他要用到的指令","aria-hidden":"true"}},[s._v("#")]),s._v(" 其他要用到的指令")]),s._v(" "),a("p",[s._v("检查端口被哪个进程占用")]),s._v(" "),a("p",[s._v("netstat -lnp|grep 88 #88 请换为你的"),a("a",{attrs:{href:"http://www.111cn.net/list-121/",target:"_blank",rel:"noopener noreferrer"}},[s._v("apache"),a("OutboundLink")],1),s._v("需要的端口，如：80")]),s._v(" "),a("p",[s._v("查看进程的详细信息")]),s._v(" "),a("p",[a("a",{attrs:{href:"http://www.111cn.net/fw/photo.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("ps"),a("OutboundLink")],1),s._v(" 1777")]),s._v(" "),a("p",[s._v("杀掉进程")]),s._v(" "),a("p",[s._v("kill -9 1777 #杀掉编号为 1777 的进程（请根据实际情况输入）")]),s._v(" "),a("p",[s._v("列出所有端口")]),s._v(" "),a("p",[s._v("netstat -ntlp")]),s._v(" "),a("p",[s._v("查看端口占用")]),s._v(" "),a("p",[s._v("lsof -i tcp:80")])])},[],!1,null,null,null);e.default=t.exports}}]);
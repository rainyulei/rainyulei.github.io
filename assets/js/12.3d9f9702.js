(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{307:function(a,t,s){"use strict";s.r(t);var n=s(0),r=Object(n.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"graphql-的学习笔记（一）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graphql-的学习笔记（一）","aria-hidden":"true"}},[a._v("#")]),a._v(" GraphQL 的学习笔记（一）")]),a._v(" "),s("p",[a._v("学习过程中资料来源")]),a._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://graphql.cn/learn/",target:"_blank",rel:"noopener noreferrer"}},[a._v("GraphQL 中文网"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/airplake/GraphQL-Learn-Chinese",target:"_blank",rel:"noopener noreferrer"}},[a._v("GraphQL 中文版教程"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/xitu/gold-miner/blob/master/TODO/high-level-reactivity.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("GraphQL TODO"),s("OutboundLink")],1)])]),a._v(" "),s("p",[a._v("GraphQLhe restful 区别")]),a._v(" "),s("ul",[s("li",[a._v("扩展性高")]),a._v(" "),s("li",[a._v("不通过 url 来区别资源而是用类型来区分资源")]),a._v(" "),s("li",[a._v("一次可以获取多个资源")]),a._v(" "),s("li",[a._v("一般情况下是单一入口而不是多 url 请求路径")])]),a._v(" "),s("h2",{attrs:{id:"graphql-的基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graphql-的基础知识","aria-hidden":"true"}},[a._v("#")]),a._v(" graphql 的基础知识")]),a._v(" "),s("h3",{attrs:{id:"基础类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 基础类型")]),a._v(" "),s("p",[a._v("graphql 有五种数据基本类型：")]),a._v(" "),s("p",[a._v("String 默认 utf-8\nint 32 位\nfloat 双精点浮动\nboolean 和\nid ，id 本质是字符串类型 但是是不可以重复的 ，这几个类型在 schema 直接声明然后使用，数组用[].")]),a._v(" "),s("h3",{attrs:{id:"自定义的标量类型，"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义的标量类型，","aria-hidden":"true"}},[a._v("#")]),a._v(" 自定义的标量类型，")]),a._v(" "),s("p",[s("code",[a._v("scalar 类型")]),a._v(" 这种自动的标量类型可以当作基础类型使用，但是要自定义其序列化和反序列化以及验证的规则 如何进行序列化和反序列化")]),a._v(" "),s("h3",{attrs:{id:"枚举类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 枚举类型")]),a._v(" "),s("p",[a._v("enum 限制在可选级中 "),s("code",[a._v("enum 集{参数}")])]),a._v(" "),s("h3",{attrs:{id:"对象类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 对象类型")]),a._v(" "),s("p",[s("code",[a._v("type 对象名称（首字母大写)")]),a._v(" 对象类型定义了一个查询或输入的总体格式")]),a._v(" "),s("h3",{attrs:{id:"！"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#！","aria-hidden":"true"}},[a._v("#")]),a._v(" ！")]),a._v(" "),s("p",[a._v("代表不许输入或者必须输出，必须存在")]),a._v(" "),s("h3",{attrs:{id:"参数类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 参数类型")]),a._v(" "),s("p",[a._v("graphql 中所有的传递的参数都是具名的，参数在传递过程中可以设置默认值，")]),a._v(" "),s("p",[s("code",[a._v("length（unit：lengthUnit = meter）")]),a._v(" 表示当参数类型是 unit 当没有传递的时候默认为 meter")]),a._v(" "),s("h3",{attrs:{id:"特殊定义的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊定义的类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 特殊定义的类型")]),a._v(" "),s("p",[a._v("1 查询类型 query 2 变更类型 mutation 在 graphql 中查询类型必须存在，如果不存在则这个 graphql 不可以使用。 mutation 对应输入类型 input 而不是 type")]),a._v(" "),s("h3",{attrs:{id:"接口-interfaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口-interfaces","aria-hidden":"true"}},[a._v("#")]),a._v(" 接口 interfaces")]),a._v(" "),s("p",[a._v("一个接口是一个抽象类型，包含了某些字段 对象必须实现某些字段才能实现这个接口")]),a._v(" "),s("ul",[s("li",[a._v("定义接口 interfaces 接口名称{接口中的字段以及规则}")]),a._v(" "),s("li",[a._v("实现接口 type 实体 implements 接口 {接口字段，自定义字段}")]),a._v(" "),s("li",[a._v("接口类型主要使用在当需要返回一个对象，多个对象或者对象时不同的类型的时候")]),a._v(" "),s("li",[a._v("查询的时候对应内联片段")])]),a._v(" "),s("h3",{attrs:{id:"联合类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联合类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 联合类型")]),a._v(" "),s("p",[a._v("联合类型和接口类型但是不指定任何片段\n定义方法 union 类型名称 = 类型一|类型 2|类型三 使用这个联合类型后返回的时一个类型 1 类型 2 或者类型 3，查询时需要使用--条件片段查询")]),a._v(" "),s("h3",{attrs:{id:"别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#别名","aria-hidden":"true"}},[a._v("#")]),a._v(" 别名")]),a._v(" "),s("p",[a._v("aliases 在前端定义查询的时候，如果遇到在一个查询内部多次查询一个查询属性这个时候会引发冲突，需要使用别名来定义，具体使用方式就像 js 中给方法定影上方法名类似 "),s("code",[a._v("别名：需要调用的方法（参数名：参数值）{需要的返回值}")])]),a._v(" "),s("h3",{attrs:{id:"查询片段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询片段","aria-hidden":"true"}},[a._v("#")]),a._v(" 查询片段")]),a._v(" "),s("p",[a._v("可定义一个可复用的查询单元（返回值类型集合），定义方法，")]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("fragment comparisonFields on Character "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    # 需要的返回值 列在这里\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n# 使用的时候，解构赋值\n在查询方法内部 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("comparisonFields\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h3",{attrs:{id:"操作类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作类型")]),a._v(" "),s("p",[a._v("query mutation subscription")]),a._v(" "),s("h3",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),s("p",[a._v("variables 使前端使用时字段的参数变为动态 {“graphql”：true，“variables”：{“episode”：jedi}} 变量不必须是标量类型，对象类型 或是枚举类型")]),a._v(" "),s("h3",{attrs:{id:"指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令","aria-hidden":"true"}},[a._v("#")]),a._v(" 指令")]),a._v(" "),s("p",[a._v("directives @include （if：boolean）仅在参数位 true 的时候包含此字段 @skip（if：boolean）仅仅在参数位 true 的时候跳过此字段，用于在查询的时候增减字段，灵活的定义字段")]),a._v(" "),s("h3",{attrs:{id:"变更-mutations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变更-mutations","aria-hidden":"true"}},[a._v("#")]),a._v(" 变更 Mutations")]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("mutations 方法名（$函数名后端：函数名本地，$函数名后端：函数名本地）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    后端的方法名（后端参数名：$函数名后端，后端参数名：$函数名后端）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        需要的返回值\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n variables"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"graphql"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"variables"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("前端的参数名：前端的参数值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h3",{attrs:{id:"变更多个字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变更多个字段","aria-hidden":"true"}},[a._v("#")]),a._v(" 变更多个字段")]),a._v(" "),s("p",[a._v("一个变更可以操作多个字段 但是变更字段是线性的 一个接一个查询时并行的，如果同时又两个同名的变更会先执行第一个确保不会出现竞争状态。")]),a._v(" "),s("h3",{attrs:{id:"内联片段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内联片段","aria-hidden":"true"}},[a._v("#")]),a._v(" 内联片段")]),a._v(" "),s("p",[a._v("如果查询的字段返回的是接口或者联合类型 需要使用联合片段取出具体的数据。")]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("# 使用 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("on 查询的对象 来确定查询的结果\nquery "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("HeroFOrepisode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("$ep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("Episode"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hero")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("episode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("$ep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        name\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("on Droid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                primaryFuntion\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("on Human"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        height\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("意思是如果请求的参数在后台查询过程收纳柜是 Droid 类型则返回 primaryFuntion 反之则返回 height")]),a._v(" "),s("h3",{attrs:{id:"原字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原字段","aria-hidden":"true"}},[a._v("#")]),a._v(" 原字段")]),a._v(" "),s("p",[a._v("如果不知道服务返回什么类型 这个时候由客户端决定是个什么数据，可以从 graphql 的内省系统中使用一些变量，可以对返回的接口经行验证和判断。")]),a._v(" "),s("p",[a._v("_ _schema 返回哪些类型可以使用")]),a._v(" "),s("p",[a._v("_ _typeName 获取对象的名称 name---对应这个")]),a._v(" "),s("p",[a._v("_ _type 鉴定类型")]),a._v(" "),s("p",[a._v("_ _ typeKind 对象类型 由 kind ---对应这个")]),a._v(" "),s("p",[a._v("__field 查看字段 fields 对应这个")]),a._v(" "),s("p",[a._v("__inputValue 要求的输入参数")]),a._v(" "),s("p",[a._v("__EnumValue")]),a._v(" "),s("p",[a._v("__Directive")]),a._v(" "),s("p",[a._v("可以指定的属性 name kind description fields ofType 等等")]),a._v(" "),s("h3",{attrs:{id:"生产模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生产模式","aria-hidden":"true"}},[a._v("#")]),a._v(" 生产模式")]),a._v(" "),s("p",[a._v("推荐在生产环境下使用压缩格式 gzip "),s("code",[a._v("Accept-Encoding:gzip")])]),a._v(" "),s("h3",{attrs:{id:"分页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页","aria-hidden":"true"}},[a._v("#")]),a._v(" 分页")]),a._v(" "),s("p",[a._v("服务端诗句使用 数组，在请求的时候，参数内部可以定义类似 first after offset 等等，")]),a._v(" "),s("p",[a._v("具体实现")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("第一种分页 "),s("code",[a._v("friends(first:20 offsert:20)")]),a._v(" 表示第一次请求 20 个 接下来每次都略过 20 个")])]),a._v(" "),s("li",[s("p",[a._v("第二种分页 "),s("code",[a._v("friends(first:20 after:$friendsID)")]),a._v("friendsID 是上次请求的最后一个朋友的 ID")])]),a._v(" "),s("li",[s("p",[a._v("第三种分页"),s("code",[a._v("friends(frist:20 after:$friendCursor)")]),a._v("从左后一页获取一个游标来进行分页，使用这种分页更加强大，但是需要设计游标，而游标则表示总体数量和当前位置并且把数据放置在游标内部，游标充当整体数据的边界和定位位置。具体实现")]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("hero"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    name\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("friends")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" after"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("上一页最后一个指针")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        totalCount#总数\n        edges"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("#边界\n            node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("#节点\n                name\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n              cursor# 指针 自己定义的\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        pageInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            endCursor#最后一个光标是什么\n            hasNextPage#还有没有下一页\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n# 在后端的代码种页要定义同样的方法  并且做好整体查询以及生成指针的操作\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br")])])])])])},[],!1,null,null,null);t.default=r.exports}}]);